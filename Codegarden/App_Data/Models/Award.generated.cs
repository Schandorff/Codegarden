//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Award</summary>
	[PublishedContentModel("award")]
	public partial class Award : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "award";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Award(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Award, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Award Description: This is the description of the award
		///</summary>
		[ImplementPropertyType("awardDescription")]
		public string AwardDescription
		{
			get { return this.GetPropertyValue<string>("awardDescription"); }
		}

		///<summary>
		/// Award Icon: This is the icon of the award
		///</summary>
		[ImplementPropertyType("awardIcon")]
		public IPublishedContent AwardIcon
		{
			get { return this.GetPropertyValue<IPublishedContent>("awardIcon"); }
		}

		///<summary>
		/// Award Title: This is the title of the award
		///</summary>
		[ImplementPropertyType("awardTitle")]
		public string AwardTitle
		{
			get { return this.GetPropertyValue<string>("awardTitle"); }
		}

		///<summary>
		/// Winning Company: This is the winning company
		///</summary>
		[ImplementPropertyType("winningCompany")]
		public string WinningCompany
		{
			get { return this.GetPropertyValue<string>("winningCompany"); }
		}

		///<summary>
		/// Winning Solution: This it he winning solution
		///</summary>
		[ImplementPropertyType("winningSolution")]
		public string WinningSolution
		{
			get { return this.GetPropertyValue<string>("winningSolution"); }
		}
	}
}
